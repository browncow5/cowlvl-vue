version: '2.1'
orbs:
  node: circleci/node@5.0
  aws-ecr: circleci/aws-ecr@7.3.0
  aws-ecs: circleci/aws-ecs@02.2.1
  synthetics-ci: datadog/synthetics-ci-orb@1.0.1
jobs:
  test:
    executor: node/default
    steps:
      - checkout
      - node/install-packages:
          app-dir: ~/project/server
          cache-path: ~/project/node_modules
          override-ci-command: npm install
      - run: sudo npm install -g npm@latest --prefix ~/project/server
      - run: npm run test --prefix ~/project/server
  integration-tests:
    docker:
      - image: your-image
    steps:
      - checkout
      - run:
          background: true
          command: npm start
          name: Running server in background
      - synthetics-ci/run-tests:
          api_key: DATADOG_API_KEY
          app_key: DATADOG_APP_KEY
          config_path: integration-tests/tunnel-config.json
          files: integration-tests/*.synthetics.json
          test_search_query: 'tag:e2e-tests'
          tunnel: true

workflows:
  test_my_app:
    jobs:
      - test
  build_and_push_image:
    jobs:
      - aws-ecr/build-and-push-image:
          filters:
            branches:
              only:
                - master
          repo: "${MY_APP_PREFIX}"
          tag: "${CIRCLE_SHA1}"
          dockerfile: Dockerfile
      - aws-ecs/deploy-service-update:
          filters:
            branches:
              only:
                - master
          requires:
            - aws-ecr/build-and-push-image
          cluster-name: '${MY_APP_PREFIX}'
          service-name: '${AWS_ECS_SERVICE}'
          family: '${AWS_ECS_TASK}'
          container-image-name-updates: 'container=${AWS_ECS_CONTAINER},tag=${CIRCLE_SHA1}'
  datadog_syn_tests:
    jobs:
      - integration-tests